I"Õ<p>I decided to take on the <a href="https://archive.ics.uci.edu/ml/datasets/Occupancy+Detection+">Occupancy dataset from UCI Machine Learning</a>. With this dataset, I wanted to accomplish 2 tasks:</p>

<ol>
  <li>Predict the occupancy of a room given parameters.</li>
  <li>Conduct Time Series Analysis to forecast the parameters and predict occupancy.</li>
</ol>

<p>The tasks may sound similar, but theyâ€™re actually different. The first one does not take the time into account, but rather uses the parameters or a subset of the parameters given (Light, Humidity, Temperature, CO2, etc.) to predict the occupancy of the room (binary -&gt; 0 or 1). The second task actually does take the time into account, and forecasts the individual parameters to predict the occupancy of the room at specific times where the parameters were forecast.</p>

<p>In this post, I am going to show how I tackle the first task. This example uses Python 3. First, import the required modules and packages:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">import</span> <span class="n">numpy</span> <span class="n">as</span> <span class="n">np</span>
<span class="n">import</span> <span class="n">pandas</span> <span class="n">as</span> <span class="n">pd</span>
<span class="n">from</span> <span class="n">sklearn</span><span class="p">.</span><span class="nf">metrics</span> <span class="n">import</span> <span class="n">accuracy_score</span><span class="p">,</span> <span class="n">plot_confusion_matrix</span>
<span class="n">import</span> <span class="n">matplotlib</span><span class="p">.</span><span class="nf">pyplot</span> <span class="n">as</span> <span class="n">plt</span>
<span class="n">import</span> <span class="n">seaborn</span> <span class="n">as</span> <span class="n">sns</span>
<span class="n">from</span> <span class="n">sklearn</span><span class="p">.</span><span class="nf">linear_model</span> <span class="n">import</span> <span class="no">LogisticRegression</span>
<span class="n">from</span> <span class="n">sklearn</span><span class="p">.</span><span class="nf">neighbors</span> <span class="n">import</span> <span class="no">KNeighborsClassifier</span>
<span class="n">from</span> <span class="n">sklearn</span><span class="p">.</span><span class="nf">naive_bayes</span> <span class="n">import</span> <span class="no">GaussianNB</span>
<span class="n">from</span> <span class="n">sklearn</span><span class="p">.</span><span class="nf">neural_network</span> <span class="n">import</span> <span class="no">MLPClassifier</span>
<span class="n">from</span> <span class="n">sklearn</span> <span class="n">import</span> <span class="n">svm</span>
<span class="n">from</span> <span class="n">sklearn</span><span class="p">.</span><span class="nf">feature_selection</span> <span class="n">import</span> <span class="no">SelectKBest</span>
<span class="n">from</span> <span class="n">sklearn</span><span class="p">.</span><span class="nf">feature_selection</span> <span class="n">import</span> <span class="n">f_classif</span>
<span class="n">from</span> <span class="n">sklearn</span> <span class="n">import</span> <span class="n">preprocessing</span>
<span class="n">from</span> <span class="n">sklearn</span><span class="p">.</span><span class="nf">tree</span> <span class="n">import</span> <span class="no">DecisionTreeClassifier</span><span class="p">,</span> <span class="n">export_graphviz</span><span class="p">,</span><span class="n">plot_tree</span>
<span class="n">from</span> <span class="n">sklearn</span><span class="p">.</span><span class="nf">ensemble</span> <span class="n">import</span> <span class="no">RandomForestClassifier</span>
<span class="n">from</span> <span class="n">statsmodels</span><span class="p">.</span><span class="nf">tsa</span><span class="p">.</span><span class="nf">seasonal</span> <span class="n">import</span> <span class="n">seasonal_decompose</span>
<span class="n">from</span> <span class="n">statsmodels</span><span class="p">.</span><span class="nf">tsa</span><span class="p">.</span><span class="nf">stattools</span> <span class="n">import</span> <span class="n">adfuller</span>
<span class="n">from</span> <span class="n">statsmodels</span><span class="p">.</span><span class="nf">tsa</span><span class="p">.</span><span class="nf">stattools</span> <span class="n">import</span> <span class="n">grangercausalitytests</span>
<span class="n">from</span> <span class="n">fbprophet</span> <span class="n">import</span> <span class="no">Prophet</span>
<span class="n">import</span> <span class="n">warnings</span>
<span class="n">warnings</span><span class="p">.</span><span class="nf">filterwarnings</span><span class="p">(</span><span class="s1">'ignore'</span><span class="p">)</span>
<span class="o">%</span><span class="n">matplotlib</span> <span class="n">inline</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">rcParams</span><span class="p">[</span><span class="s1">'figure.figsize'</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mf">10.0</span><span class="p">,</span> <span class="mf">6.0</span><span class="p">]</span></code></pre></figure>

<p>Then, read in the data:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="c1"># Read in data</span>
<span class="n">df_train</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span><span class="s1">'train_data.txt'</span><span class="p">)</span>
<span class="n">df_val</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span><span class="s1">'validation_data.txt'</span><span class="p">)</span></code></pre></figure>

:ET