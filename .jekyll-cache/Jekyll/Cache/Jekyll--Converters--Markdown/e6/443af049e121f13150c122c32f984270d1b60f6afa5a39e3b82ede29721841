I"tI<p>With the world going through the COVID-19 pandemic, and given that I’m in NYC, which is the epicenter of the outbreak here in the U.S., I thought it would be a fun exercise to track the number of cases and deaths in NYC. There are a lot of great visualizations out there, and I’ve been checking the <a href="https://www.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6">COVID-19 Dashboard by JHU CSSE</a>, but I wanted an easier, faster way to just see the information for NYC.</p>

<p>I found a data source from New York Times that gets updated daily on GitHub (<a href="https://github.com/nytimes/covid-19-data">https://github.com/nytimes/covid-19-data</a>). From this data, I used D3.js (which I learned in my course CSE 6242 Data Analytics and Visualization at Georgia Tech) to create a simple interactive plot that tracks the number of confirmed COVID-19 cases and deaths in NYC. Check it out <a href="https://tonyksong.github.io/covid19nyc.html">here!</a></p>

<p>Here’s the code, written with D3.js v5:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="o">&lt;!</span><span class="no">DOCTYPE</span> <span class="n">html</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="n">html</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="n">head</span><span class="o">&gt;</span>
    <span class="o">&lt;</span><span class="n">meta</span> <span class="n">http</span><span class="o">-</span><span class="n">equiv</span><span class="o">=</span><span class="s2">"Content-Type"</span> <span class="n">content</span><span class="o">=</span><span class="s2">"text/html;charset=utf-8"</span><span class="o">&gt;</span>
    <span class="o">&lt;</span><span class="n">title</span><span class="o">&gt;</span><span class="no">COVID</span><span class="o">-</span><span class="mi">19</span> <span class="k">in</span> <span class="no">NYC</span><span class="o">&lt;</span><span class="sr">/title&gt;
    &lt;script type="text/</span><span class="n">javascript</span><span class="s2">" src="</span><span class="n">https</span><span class="ss">:/</span><span class="o">/</span><span class="n">d3js</span><span class="p">.</span><span class="nf">org</span><span class="o">/</span><span class="n">d3</span><span class="p">.</span><span class="nf">v5</span><span class="p">.</span><span class="nf">min</span><span class="p">.</span><span class="nf">js</span><span class="s2">"&gt;&lt;/script&gt;
    &lt;style&gt;

        html, body {
            margin: 0;
            padding: 0;
            height: 100%;
            width: 100%;
            font: 10px "</span><span class="no">Helvetica</span> <span class="no">Neue</span><span class="s2">", Helvetica, Arial, sans-serif;
            position: relative;
        }

        text {
            font-family: arial;
            font-size: 12px;
        }


        path.line {
            fill: none;
            stroke: red;
            stroke-width: 2px;
        }

        .overlay {
                fill: none;
                pointer-events: all;
        }

        .axis path,
        .axis line {
          fill: none;
          stroke: slategray;
          shape-rendering: crispEdges;
        }

        .focus circle {
        fill: none;
        stroke: black;
        }

        .tooltip {
            width: 94px;
            padding: 4px 10px;
            border: 1px solid #aaa;
            border-radius: 4px;
            box-shadow: 2px 2px 4px rgba(0,0,0,0.3);
            position: absolute;
            background-color: white;
            font-size: 14px;
            pointer-events: none;
            -webkit-transition: all 0.25s;
            -moz-transition: all 0.25s;
            -ms-transition: all 0.25s;
            -o-transition: all 0.25s;
            transition: all 0.25s;
        }

        .tooltip div {
            margin: 3px 0;
        }

        .tooltip-date, .tooltip-likes {
            font-weight: bold;
        }

        .grid line {
            stroke: lightgrey;
            stroke-opacity: 0.6;
            shape-rendering: crispEdges
          }
        .grid path {
            stroke-width: 0;

    &lt;/style&gt;
  &lt;/head&gt;
  &lt;body&gt;

    &lt;script type="</span><span class="n">text</span><span class="o">/</span><span class="n">javascript</span><span class="s2">"&gt;

var parseDate = d3.timeParse("</span><span class="o">%</span><span class="no">Y</span><span class="o">-%</span><span class="n">m</span><span class="o">-%</span><span class="n">d</span><span class="s2">"),
    bisectDate = d3.bisector(function(d) { return d.date; }).left,
    formatValue = d3.format("</span><span class="p">,</span><span class="s2">"),
    dateFormatter = d3.timeFormat("</span><span class="o">%</span><span class="n">m</span><span class="o">/%</span><span class="n">d</span><span class="o">/%</span><span class="n">y</span><span class="s2">");

var margin = {left: 50, right: 20, top: 20, bottom: 50 };

var width = 960 - margin.left - margin.right;
var height = 500 - margin.top - margin.bottom;


var max = 0;

var xNudge = 50;
var yNudge = 20;

var tooltip = d3.select("</span><span class="n">body</span><span class="s2">").append("</span><span class="n">div</span><span class="s2">")
        .attr("</span><span class="k">class</span><span class="s2">", "</span><span class="n">tooltip</span><span class="s2">")
        .style("</span><span class="nb">display</span><span class="s2">", "</span><span class="n">none</span><span class="s2">");

//Function for converting CSV values from strings to Dates and numbers
var rowConverter = function(d) {
    return {
        date: parseDate(d.date),
        county: d.county,
        cases: parseFloat(d.cases),
        deaths: parseFloat(d.deaths)
    };
}

d3.dsv("</span><span class="p">,</span><span class="s2">", "</span><span class="n">https</span><span class="ss">:/</span><span class="o">/</span><span class="n">raw</span><span class="p">.</span><span class="nf">githubusercontent</span><span class="p">.</span><span class="nf">com</span><span class="o">/</span><span class="n">nytimes</span><span class="o">/</span><span class="n">covid</span><span class="o">-</span><span class="mi">19</span><span class="o">-</span><span class="n">data</span><span class="o">/</span><span class="n">master</span><span class="o">/</span><span class="n">us</span><span class="o">-</span><span class="n">counties</span><span class="p">.</span><span class="nf">csv</span><span class="s2">", rowConverter).then(function(data) {

        dataset = data.filter(function(d) {
              return d["</span><span class="n">county</span><span class="s2">"] === "</span><span class="no">New</span> <span class="no">York</span> <span class="no">City</span><span class="s2">"
            });

        max = d3.max(dataset, function(d) { return d.cases; });
        minDate = d3.min(dataset, function(d) {return d.date; });
        maxDate = d3.max(dataset, function(d) { return d.date; });


        var y = d3.scaleLinear()
                    .domain([1,max])
                    .range([height,0]);

        var x = d3.scaleTime()
                    .domain([minDate,maxDate])
                    .range([0,width]);

        var yAxis = d3.axisLeft(y);

        var xAxis = d3.axisBottom(x);

        var line = d3.line()
            .x(function(d){ return x(d.date); })
            .y(function(d){ return y(d.cases); })

        var line2 = d3.line()
            .x(function(d){ return x(d.date); })
            .y(function(d){ return y(d.deaths); })

        function make_x_gridlines() {
            return d3.axisBottom(x)
                .ticks(8)
            }
        function make_y_gridlines() {
            return d3.axisLeft(y)
                .ticks(5)
            }

        var svg = d3.select("</span><span class="n">body</span><span class="s2">").append("</span><span class="n">svg</span><span class="s2">").attr("</span><span class="nb">id</span><span class="s2">","</span><span class="n">svg</span><span class="s2">").attr("</span><span class="n">height</span><span class="s2">","</span><span class="mi">100</span><span class="o">%</span><span class="s2">").attr("</span><span class="n">width</span><span class="s2">","</span><span class="mi">100</span><span class="o">%</span><span class="s2">");
        var chartGroup = svg.append("</span><span class="n">g</span><span class="s2">").attr("</span><span class="k">class</span><span class="s2">","</span><span class="n">chartGroup</span><span class="s2">").attr("</span><span class="n">transform</span><span class="s2">","</span><span class="n">translate</span><span class="p">(</span><span class="s2">"+xNudge+"</span><span class="p">,</span><span class="s2">"+yNudge+"</span><span class="p">)</span><span class="s2">");

        chartGroup.append("</span><span class="n">path</span><span class="s2">")
            .style("</span><span class="n">stroke</span><span class="s2">","</span><span class="n">blue</span><span class="s2">")
            .style("</span><span class="n">fill</span><span class="s2">","</span><span class="n">none</span><span class="s2">")
            .style("</span><span class="n">stroke</span><span class="o">-</span><span class="n">width</span><span class="s2">","</span><span class="mi">2</span><span class="n">px</span><span class="s2">")
            .attr("</span><span class="n">d</span><span class="s2">",function(d){ return line(dataset); })

        chartGroup.append("</span><span class="n">path</span><span class="s2">")
            .style("</span><span class="n">stroke</span><span class="s2">","</span><span class="n">red</span><span class="s2">")
            .style("</span><span class="n">fill</span><span class="s2">","</span><span class="n">none</span><span class="s2">")
            .style("</span><span class="n">stroke</span><span class="o">-</span><span class="n">width</span><span class="s2">","</span><span class="mi">2</span><span class="n">px</span><span class="s2">")
            .attr("</span><span class="n">d</span><span class="s2">",function(d){ return line2(dataset); })

        var focus = chartGroup.append("</span><span class="n">g</span><span class="s2">")
            .attr("</span><span class="k">class</span><span class="s2">", "</span><span class="n">focus</span><span class="s2">")
            .style("</span><span class="nb">display</span><span class="s2">", "</span><span class="n">none</span><span class="s2">");

        focus.append("</span><span class="n">circle</span><span class="s2">")
            .attr("</span><span class="n">r</span><span class="s2">", 5);

        focus.append("</span><span class="n">path</span><span class="s2">")
              .style("</span><span class="n">stroke</span><span class="s2">", "</span><span class="n">black</span><span class="s2">")
              .style("</span><span class="n">stroke</span><span class="o">-</span><span class="n">width</span><span class="s2">", "</span><span class="mi">1</span><span class="n">px</span><span class="s2">")
              .style("</span><span class="n">opacity</span><span class="s2">", "</span><span class="mi">0</span><span class="s2">");

        var tooltipDate = tooltip.append("</span><span class="n">div</span><span class="s2">")
            .attr("</span><span class="k">class</span><span class="s2">", "</span><span class="n">tooltip</span><span class="o">-</span><span class="n">date</span><span class="s2">");

        var tooltipCases = tooltip.append("</span><span class="n">div</span><span class="s2">");
        tooltipCases.append("</span><span class="n">span</span><span class="s2">")
            .attr("</span><span class="k">class</span><span class="s2">", "</span><span class="n">tooltip</span><span class="o">-</span><span class="n">title</span><span class="s2">")
            .text("</span><span class="no">Cases</span><span class="p">:</span> <span class="s2">");

        var tooltipDeaths = tooltip.append("</span><span class="n">div</span><span class="s2">");
        tooltipDeaths.append("</span><span class="n">span</span><span class="s2">")
            .attr("</span><span class="k">class</span><span class="s2">", "</span><span class="n">tooltip</span><span class="o">-</span><span class="n">title</span><span class="s2">")
            .text("</span><span class="no">Deaths</span><span class="p">:</span> <span class="s2">");

        var tooltipCasesValue = tooltipCases.append("</span><span class="n">span</span><span class="s2">")
            .attr("</span><span class="k">class</span><span class="s2">", "</span><span class="n">tooltip</span><span class="o">-</span><span class="n">cases</span><span class="s2">");

        var tooltipDeathsValue = tooltipDeaths.append("</span><span class="n">span</span><span class="s2">")
            .attr("</span><span class="k">class</span><span class="s2">", "</span><span class="n">tooltip</span><span class="o">-</span><span class="n">deaths</span><span class="s2">");

        chartGroup.append("</span><span class="n">rect</span><span class="s2">")
            .attr("</span><span class="k">class</span><span class="s2">", "</span><span class="n">overlay</span><span class="s2">")
            .attr("</span><span class="n">width</span><span class="s2">", width)
            .attr("</span><span class="n">height</span><span class="s2">", height)
            .on("</span><span class="n">mouseover</span><span class="s2">", function() { focus.style("</span><span class="nb">display</span><span class="s2">", null); tooltip.style("</span><span class="nb">display</span><span class="s2">", null);  })
            .on("</span><span class="n">mouseout</span><span class="s2">", function() { focus.style("</span><span class="nb">display</span><span class="s2">", "</span><span class="n">none</span><span class="s2">"); tooltip.style("</span><span class="nb">display</span><span class="s2">", "</span><span class="n">none</span><span class="s2">"); })
            .on("</span><span class="n">mousemove</span><span class="s2">", mousemove);

        function mousemove() {
            var x0 = x.invert(d3.mouse(this)[0]),
                i = bisectDate(dataset, x0, 1),
                d0 = dataset[i - 1],
                d1 = dataset[i],
                d = x0 - d0.date &gt; d1.date - x0 ? d1 : d0;
            focus.attr("</span><span class="n">transform</span><span class="s2">", "</span><span class="n">translate</span><span class="p">(</span><span class="s2">" + x(d.date) + "</span><span class="p">,</span><span class="s2">" + y(d.cases) + "</span><span class="p">)</span><span class="s2">");
            tooltip.attr("</span><span class="n">style</span><span class="s2">", "</span><span class="n">left</span><span class="ss">:" + (x(d.date) + 64) + "</span><span class="n">px</span><span class="p">;</span><span class="n">top</span><span class="ss">:" + y(d.cases) + "</span><span class="n">px</span><span class="p">;</span><span class="s2">");
            tooltip.select("</span><span class="p">.</span><span class="nf">tooltip</span><span class="o">-</span><span class="n">date</span><span class="s2">").text(dateFormatter(d.date));
            tooltip.select("</span><span class="p">.</span><span class="nf">tooltip</span><span class="o">-</span><span class="n">cases</span><span class="s2">").text(formatValue(d.cases));
            tooltip.select("</span><span class="p">.</span><span class="nf">tooltip</span><span class="o">-</span><span class="n">deaths</span><span class="s2">").text(formatValue(d.deaths));
        }

        chartGroup.append("</span><span class="n">g</span><span class="s2">")
            .attr("</span><span class="k">class</span><span class="s2">","</span><span class="n">axis</span> <span class="n">x</span><span class="s2">")
            .attr("</span><span class="n">transform</span><span class="s2">","</span><span class="n">translate</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="s2">"+height+"</span><span class="p">)</span><span class="s2">")
            .call(xAxis);

        chartGroup.append("</span><span class="n">g</span><span class="s2">")
            .attr("</span><span class="k">class</span><span class="s2">","</span><span class="n">axis</span> <span class="n">y</span><span class="s2">")
            .call(yAxis);

        //Create title
        chartGroup.append("</span><span class="n">text</span><span class="s2">")
            .attr("</span><span class="n">x</span><span class="s2">", (width / 2))
            .attr("</span><span class="n">y</span><span class="s2">", 16)
            .attr("</span><span class="n">text</span><span class="o">-</span><span class="n">anchor</span><span class="s2">", "</span><span class="n">middle</span><span class="s2">")
            .style("</span><span class="n">font</span><span class="o">-</span><span class="n">size</span><span class="s2">", "</span><span class="mi">16</span><span class="n">px</span><span class="s2">")
            .text("</span><span class="no">COVID</span><span class="o">-</span><span class="mi">19</span> <span class="no">Confirmed</span> <span class="no">Cases</span> <span class="n">and</span> <span class="no">Deaths</span> <span class="k">in</span> <span class="no">NYC</span><span class="s2">");

        chartGroup.append("</span><span class="n">g</span><span class="s2">")
            .attr("</span><span class="k">class</span><span class="s2">","</span><span class="n">grid</span><span class="s2">")
            .attr("</span><span class="n">transform</span><span class="s2">","</span><span class="n">translate</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="s2">" + height + "</span><span class="p">)</span><span class="s2">")
            .style("</span><span class="n">stroke</span><span class="o">-</span><span class="n">dasharray</span><span class="s2">",("</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="s2">"))
            .call(make_x_gridlines()
                .tickSize(-height)
                .tickFormat("")
             )
        chartGroup.append("</span><span class="n">g</span><span class="s2">")
                .attr("</span><span class="k">class</span><span class="s2">","</span><span class="n">grid</span><span class="s2">")
                .style("</span><span class="n">stroke</span><span class="o">-</span><span class="n">dasharray</span><span class="s2">",("</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="s2">"))
                .call(make_y_gridlines()
                    .tickSize(-width)
                    .tickFormat("")
                 )


    });

    &lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;</span></code></pre></figure>

:ET